"""init

Revision ID: 477407ddf4d2
Revises: 
Create Date: 2023-08-11 16:48:31.764672

"""
import sqlalchemy_utils
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '477407ddf4d2'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('blockchain',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=50), nullable=True),
    sa.Column('short_name', sa.String(length=10), nullable=True),
    sa.Column('image', sqlalchemy_utils.types.url.URLType(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('transaction',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('hash', sa.String(length=250), nullable=True),
    sa.Column('from_send', sa.String(length=250), nullable=True),
    sa.Column('to_send', sa.String(length=250), nullable=True),
    sa.Column('value', sa.Numeric(), nullable=True),
    sa.Column('date_send', sa.DateTime(), nullable=True),
    sa.Column('txn_fee', sa.Numeric(), nullable=True),
    sa.Column('status', sa.Enum('pending', 'failed', 'success', name='transactionstatus'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('email', sqlalchemy_utils.types.email.EmailType(length=255), nullable=True),
    sa.Column('username', sa.String(length=100), nullable=True),
    sa.Column('password', sa.String(length=250), nullable=True),
    sa.Column('access_token', sa.String(), nullable=True),
    sa.Column('avatar', sqlalchemy_utils.types.url.URLType(), nullable=True),
    sa.Column('created_on', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_superuser', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_table('asset',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=50), nullable=True),
    sa.Column('decimal_places', sa.Integer(), nullable=True),
    sa.Column('blockchain_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['blockchain_id'], ['blockchain.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('message',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('content', sa.String(length=1000), nullable=True),
    sa.Column('date_send', sa.DateTime(), nullable=True),
    sa.Column('image', sqlalchemy_utils.types.url.URLType(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('wallets',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('address', sa.String(), nullable=True),
    sa.Column('balance', sa.Numeric(), nullable=True),
    sa.Column('private_key', sa.String(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('asset_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['asset_id'], ['asset.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('product',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=70), nullable=True),
    sa.Column('price', sa.Integer(), nullable=True),
    sa.Column('image', sqlalchemy_utils.types.url.URLType(), nullable=True),
    sa.Column('wallet_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['wallet_id'], ['wallets.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('order',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('date_send', sa.DateTime(), nullable=True),
    sa.Column('status', sa.Enum('new', 'delivery', 'finish', 'turning', 'failed', name='statusorder'), nullable=True),
    sa.Column('turning', sa.String(length=350), nullable=True),
    sa.Column('product_id', sa.Integer(), nullable=True),
    sa.Column('transaction_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['product_id'], ['product.id'], ),
    sa.ForeignKeyConstraint(['transaction_id'], ['transaction.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('order')
    op.drop_table('product')
    op.drop_table('wallets')
    op.drop_table('message')
    op.drop_table('asset')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_table('transaction')
    op.drop_table('blockchain')
    # ### end Alembic commands ###
